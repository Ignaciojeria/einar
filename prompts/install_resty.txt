Im using golang cobra library and i have functions like next : 
package base

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
)

func CreateContainer(project string) error {
	// Read the content of the source config.go file
	sourceConfigPath := "app/shared/archetype/container/container.go"
	configContentBytes, err := ioutil.ReadFile(sourceConfigPath)
	if err != nil {
		err := fmt.Errorf("error reading source config.go file at %s: %s", sourceConfigPath, err)
		fmt.Println(err)
		return err
	}

	configContent := string(configContentBytes)

	// Create the destination config directory
	configDir := filepath.Join(project, "app/shared/archetype/container")
	err = os.MkdirAll(configDir, 0755)
	if err != nil {
		return fmt.Errorf("error creating container directory: %v", err)
	}

	// Write the content to the destination config.go file
	configPath := filepath.Join(configDir, "container.go")
	err = ioutil.WriteFile(configPath, []byte(configContent), 0644)
	if err != nil {
		err := fmt.Errorf("error writing container file: %v", err)
		fmt.Println(err)
		return err
	}

	fmt.Printf("container file generated successfully at %s.\n", configPath)
	return nil
}

i want to create a new function called InstallResty(project string) that creates client.go file from app/shared/archetype/resty/client.go

and install resty library allocated in cmd/release/latest/.einar.cli.json :
{
    "version": "latest",
    "installation_commands": [
        {
            "name":"pubsub",
            "command":"einar -install pubsub",
            "libraries": ["cloud.google.com/go/pubsub"]
        },
        {
            "name":"resty",
            "command":"einar -install resty",
            "libraries": ["github.com/go-resty/resty/v2"]
        }
    ],
    "installations_base": [
        {
            "name":"chi",
            "library": "github.com/go-chi/chi"
        },
        {
            "name":"zerolog",
            "library": "github.com/rs/zerolog"
        },
        {
            "name":"godotenv",
            "library": "github.com/joho/godotenv"
        }
    ]
}
