i have two function : 

package base

import (
	"fmt"
	"os"
	"path/filepath"
)

func CopyDirectory(srcDir string, dstDir string) error {
	entries, err := os.ReadDir(srcDir)
	if err != nil {
		return fmt.Errorf("error reading source directory: %v", err)
	}

	err = os.MkdirAll(dstDir, os.ModePerm)
	if err != nil {
		return fmt.Errorf("error creating destination directory: %v", err)
	}

	for _, entry := range entries {
		srcPath := filepath.Join(srcDir, entry.Name())
		dstPath := filepath.Join(dstDir, entry.Name())

		fileInfo, err := entry.Info()
		if err != nil {
			return fmt.Errorf("error retrieving file info: %v", err)
		}

		if fileInfo.IsDir() {
			err = CopyDirectory(srcPath, dstPath)
			if err != nil {
				return err
			}
		} else {
			err = CopyFile(srcPath, dstPath)
			if err != nil {
				return err
			}
		}
	}
	return nil
}

and:

package base

import (
	"fmt"
	"io"
	"os"
)

func CopyFile(srcFile string, dstFile string) error {
	in, err := os.Open(srcFile)
	if err != nil {
		return fmt.Errorf("error opening source file: %v", err)
	}
	defer in.Close()

	out, err := os.Create(dstFile)
	if err != nil {
		return fmt.Errorf("error creating destination file: %v", err)
	}
	defer out.Close()

	_, err = io.Copy(out, in)
	if err != nil {
		return fmt.Errorf("error copying file content: %v", err)
	}

	err = out.Sync()
	if err != nil {
		return fmt.Errorf("error syncing destination file: %v", err)
	}

	return nil
}

is possible pass new argument called project and replace all lines with next content ${project} by the "project" argument?


for example : 

i have next file inside folder and i want replace ${project} by projet argument when function clone this file

apiVersion: v2
appVersion: "1.0"
version: 1.0.0
description: A Helm chart for Kubernetes
name: "${project}"